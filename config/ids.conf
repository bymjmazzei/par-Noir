# Intrusion Detection System (IDS) Configuration
# Identity Protocol - Production Security

# Snort Configuration
snort {
    # Network interface
    interface "eth0"
    
    # Network variables
    var HOME_NET "10.0.0.0/8"
    var EXTERNAL_NET "!$HOME_NET"
    var HTTP_SERVERS "$HOME_NET"
    var HTTP_PORTS "80,443,8080,8443"
    
    # Output configuration
    output alert_fast: /var/log/snort/alert.ids
    output log_tcpdump: /var/log/snort/snort.log
    
    # Preprocessor configuration
    preprocessor frag3_global: max_frags 65536
    preprocessor frag3_engine: policy windows detect_anomalies
    preprocessor stream5_global: max_tcp 262144, track_tcp yes, track_udp yes
    preprocessor stream5_tcp: policy windows, detect_anomalies
    preprocessor stream5_udp: timeout 180
    preprocessor http_inspect: global iis_unicode_map unicode.map 1252
    preprocessor http_inspect_server: server default profile all ports { 80 8080 443 8443 }
    preprocessor rpc_decode: 111 32771
    preprocessor bo
    preprocessor telnet_decode
    preprocessor ftp_telnet: global inspection_type stateful
    preprocessor ftp_telnet_protocol: telnet
    preprocessor smtp: ports { 25 465 587 691 }
    preprocessor sfportscan: proto { all } memcap { 10000000 } sense_level { low }
    preprocessor arpspoof
    preprocessor arpspoof_detect_host: 192.168.40.1
    preprocessor arpspoof_detect_host: 192.168.40.2
    preprocessor perfmonitor: time 300 file /var/log/snort/snort_perf.log pktcnt 10000
}

# Suricata Configuration
suricata {
    # Network configuration
    af-packet:
      - interface: eth0
        threads: auto
        cluster-id: 99
        cluster-type: cluster_flow
        defrag: yes
        use-mmap: yes
        tpacket-v3: yes
    
    # Output configuration
    outputs:
      - eve-log:
          enabled: yes
          filetype: regular
          filename: /var/log/suricata/eve.json
          types:
            - alert
            - http
            - dns
            - tls
            - files
            - flow
            - netflow
    
    # Rule configuration
    rule-files:
      - /etc/suricata/rules/
    
    # Threshold configuration
    threshold-file: /etc/suricata/threshold.config
    
    # Classification configuration
    classification-file: /etc/suricata/classification.config
    reference-config-file: /etc/suricata/reference.config
}

# Custom Rules for Identity Protocol
custom_rules {
    # DID manipulation attempts
    rule "did_manipulation" {
        sid 1000001
        msg "Potential DID manipulation attempt"
        flow established,to_server
        content "did:"
        pcre "/did:[a-z0-9]+:[a-zA-Z0-9._-]+/i"
        threshold type threshold, track by_src, count 5, seconds 60
        classtype attempted-admin
    }
    
    # JWT token tampering
    rule "jwt_tampering" {
        sid 1000002
        msg "Potential JWT token tampering"
        flow established,to_server
        content "Authorization: Bearer"
        pcre "/Bearer [A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+/=]*/i"
        threshold type threshold, track by_src, count 3, seconds 300
        classtype attempted-admin
    }
    
    # Authentication bypass attempts
    rule "auth_bypass" {
        sid 1000003
        msg "Authentication bypass attempt"
        flow established,to_server
        content "admin"
        content "password"
        content "login"
        threshold type threshold, track by_src, count 10, seconds 300
        classtype attempted-admin
    }
    
    # API abuse detection
    rule "api_abuse" {
        sid 1000004
        msg "API abuse detected"
        flow established,to_server
        content "/api/v1/"
        threshold type threshold, track by_src, count 100, seconds 60
        classtype bad-unknown
    }
    
    # File upload abuse
    rule "file_upload_abuse" {
        sid 1000005
        msg "Suspicious file upload attempt"
        flow established,to_server
        content "multipart/form-data"
        pcre "/\.(php|asp|aspx|jsp|exe|bat|cmd|sh)$/i"
        threshold type threshold, track by_src, count 3, seconds 300
        classtype attempted-admin
    }
}

# Alert Configuration
alerts {
    # Alert levels
    levels {
        low {
            action "log"
            threshold 10
            window 300
        }
        medium {
            action "log,email"
            threshold 5
            window 300
        }
        high {
            action "log,email,block"
            threshold 3
            window 300
        }
        critical {
            action "log,email,block,alert"
            threshold 1
            window 60
        }
    }
    
    # Alert recipients
    recipients {
        security_team ["security@your-domain.com"]
        ops_team ["ops@your-domain.com"]
        management ["cto@your-domain.com"]
    }
    
    # Alert channels
    channels {
        email {
            smtp_server "smtp.your-domain.com"
            smtp_port 587
            username "${SMTP_USERNAME}"
            password "${SMTP_PASSWORD}"
        }
        slack {
            webhook_url "${SLACK_WEBHOOK_URL}"
            channel "#security-alerts"
        }
        pagerduty {
            api_key "${PAGERDUTY_API_KEY}"
            service_id "${PAGERDUTY_SERVICE_ID}"
        }
    }
}

# Response Actions
response_actions {
    # Automatic responses
    automatic {
        # Block IP for critical alerts
        block_ip {
            duration 3600
            reason "Critical security alert"
        }
        
        # Rate limit for high alerts
        rate_limit {
            duration 1800
            requests_per_minute 10
        }
        
        # Challenge for medium alerts
        challenge {
            duration 900
            type "captcha"
        }
    }
    
    # Manual responses
    manual {
        # Permanent block
        permanent_block {
            reason "Manual security decision"
            requires_approval true
        }
        
        # Investigation
        investigation {
            priority "high"
            assignee "security-team"
        }
    }
}

# Integration Configuration
integration {
    # SIEM integration
    siem {
        enabled true
        endpoint "https://siem.your-domain.com/api/events"
        api_key "${SIEM_API_KEY}"
        event_types ["alert", "block", "investigation"]
    }
    
    # Firewall integration
    firewall {
        enabled true
        type "iptables"
        chain "INPUT"
        action "DROP"
    }
    
    # Load balancer integration
    load_balancer {
        enabled true
        type "nginx"
        action "deny"
    }
}

# Monitoring and Reporting
monitoring {
    # Metrics collection
    metrics {
        enabled true
        interval 60
        retention_days 90
        
        # Metrics to collect
        collect [
            "alerts_per_hour",
            "blocks_per_hour",
            "false_positives",
            "response_times",
            "rule_hits"
        ]
    }
    
    # Dashboard configuration
    dashboard {
        enabled true
        url "https://ids.your-domain.com"
        refresh_interval 30
    }
    
    # Report generation
    reports {
        daily {
            enabled true
            recipients ["security@your-domain.com"]
            format "pdf"
        }
        weekly {
            enabled true
            recipients ["management@your-domain.com"]
            format "pdf"
        }
        monthly {
            enabled true
            recipients ["cto@your-domain.com"]
            format "pdf"
        }
    }
}

# Performance Configuration
performance {
    # Memory limits
    max_memory "4GB"
    
    # CPU limits
    max_cpu_percent 90
    
    # Thread configuration
    threads {
        detection 4
        management 2
        output 2
    }
    
    # Queue configuration
    queues {
        input_size 10000
        output_size 10000
        max_pending_packets 100000
    }
}

# Logging Configuration
logging {
    # Log files
    files {
        alerts "/var/log/ids/alerts.log"
        events "/var/log/ids/events.log"
        stats "/var/log/ids/stats.log"
        errors "/var/log/ids/errors.log"
    }
    
    # Log levels
    levels {
        alerts "info"
        events "debug"
        stats "info"
        errors "error"
    }
    
    # Log rotation
    rotation {
        size "100MB"
        keep 30
        compress true
    }
    
    # Log format
    format "json"
}
